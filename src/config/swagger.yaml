openapi: 3.0.0
info:
  title: Todo
  description: todo App API
  version: 0.1.9

servers:
  - url: https://to-do-app.dimitrikokhtashvili.site
    description: production server
  - url: http://localhost:4000
    description: local server

paths:
  /api/addToDo:
    post:
      summary: Create a new Todo
      description: Adds a new todo item with title and text.
      operationId: addTodo
      tags:
        - Todos
      requestBody:
        description: The todo item to be created
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - text
              properties:
                title:
                  type: string
                  example: "New Task"
                text:
                  type: string
                  example: "Details about the new task"
      responses:
        "201":
          description: Todo created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Todo created successfully"
                  todo:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
                      title:
                        type: string
                        example: "New Task"
                      text:
                        type: string
                        example: "Details about the new task"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2024-11-13T12:34:56Z"
        "400":
          description: Missing title or text in the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Title and text are required."

  /api/getToDos:
    get:
      tags:
        - Todos # Ensure this matches the desired section in Swagger UI
      summary: Get all todos
      description: This endpoint allows you to get all todos from the database.
      operationId: getToDos
      responses:
        "200":
          description: Todos retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The ID of the todo
                    title:
                      type: string
                      description: The title of the todo
                    text:
                      type: string
                      description: The description of the todo
        "500":
          description: Internal server error, something went wrong while retrieving the todos

  /api/deleteToDo/{id}:
    delete:
      tags:
        - "Todos"
      summary: "Delete a to-do task by ID"
      description: "This endpoint deletes a to-do task from the database using the provided ID."
      operationId: "deleteToDo"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the to-do task to be deleted"
          required: true
          type: "integer"
      responses:
        200:
          description: "Task deleted successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Task deleted successfully"
        404:
          description: "Task not found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Task not found"
        500:
          description: "Failed to delete task"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Failed to delete task"

  /api/editToDo/{id}:
    put:
      tags:
        - Todos
      summary: Edit a todo by ID
      description: Updates the title and text of an existing todo item.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the todo to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The updated title of the todo.
                  example: Updated Task Title
                text:
                  type: string
                  description: The updated text of the todo.
                  example: Updated Task Description
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task updated successfully
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task not found
        "500":
          description: Failed to update task
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to update task

  /api/completedToDo/{id}:
    patch:
      summary: Toggle the completed status of a todo task
      description: This endpoint toggles the "completed" status of a specific todo task by its ID.
      tags:
        - Todos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the todo task to update.
      responses:
        200:
          description: Successfully toggled the completed status of the todo task.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Todo status updated"
                  todo:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: "Sample Task"
                      text:
                        type: string
                        example: "This is a sample task description."
                      completed:
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        example: "2023-11-14T12:00:00.000Z"
        404:
          description: Todo task not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Todo not found"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error updating todo"
                  error:
                    type: string
                    example: "Database connection error or other issue."

  /api/deleteAllToDo:
    delete:
      summary: Delete all tasks
      description: Deletes all tasks from the database.
      tags:
        - ToDo
      responses:
        200:
          description: All tasks deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All tasks deleted successfully"
        404:
          description: No tasks found to delete
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No tasks found to delete"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Failed to delete tasks"

  /api/deleteCompletedToDo:
    delete:
      summary: Delete all completed tasks
      description: Deletes all tasks that have been marked as completed from the database.
      tags:
        - ToDo
      responses:
        200:
          description: All completed tasks deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All completed tasks deleted successfully"
        404:
          description: No completed tasks found to delete
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No completed tasks found to delete"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Failed to delete completed tasks"
